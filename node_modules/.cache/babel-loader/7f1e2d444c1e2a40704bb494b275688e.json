{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport default function useRandom(type) {\n  const [random, setRandom] = useState();\n  const [error, setError] = useState();\n  const mealURL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const drinkURL = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n  useEffect(() => {\n    const getRandom = async () => {\n      if (type === 'meal') {\n        try {\n          const result = await fetch(mealURL).then(response => response.json());\n          setRandom(result.meals[0]);\n        } catch (err) {\n          setError({\n            error: err\n          });\n        }\n      }\n\n      if (type === 'drink') {\n        try {\n          const result = await fetch(drinkURL).then(response => response.json());\n          setRandom(result.drinks[0]);\n        } catch (err) {\n          setError({\n            error: err\n          });\n        }\n      }\n    };\n\n    getRandom();\n  }, [type]);\n  return [random, error];\n}","map":{"version":3,"sources":["/home/camila/Documentos/github_projetos/recipes-app-project/src/hooks/useRandom.js"],"names":["useEffect","useState","useRandom","type","random","setRandom","error","setError","mealURL","drinkURL","getRandom","result","fetch","then","response","json","meals","err","drinks"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,EAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAMO,OAAO,GAAG,oDAAhB;AACA,QAAMC,QAAQ,GAAG,wDAAjB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,YAAY;AAC5B,UAAIP,IAAI,KAAK,MAAb,EAAqB;AACnB,YAAI;AACF,gBAAMQ,MAAM,GAAG,MAAMC,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAlC,CAArB;AACAV,UAAAA,SAAS,CAACM,MAAM,CAACK,KAAP,CAAa,CAAb,CAAD,CAAT;AACD,SAHD,CAGE,OAAOC,GAAP,EAAY;AACZV,UAAAA,QAAQ,CAAC;AACPD,YAAAA,KAAK,EAAEW;AADA,WAAD,CAAR;AAGD;AACF;;AACD,UAAId,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAI;AACF,gBAAMQ,MAAM,GAAG,MAAMC,KAAK,CAACH,QAAD,CAAL,CAAgBI,IAAhB,CAAsBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAnC,CAArB;AACAV,UAAAA,SAAS,CAACM,MAAM,CAACO,MAAP,CAAc,CAAd,CAAD,CAAT;AACD,SAHD,CAGE,OAAOD,GAAP,EAAY;AACZV,UAAAA,QAAQ,CAAC;AACPD,YAAAA,KAAK,EAAEW;AADA,WAAD,CAAR;AAGD;AACF;AACF,KArBD;;AAsBAP,IAAAA,SAAS;AACV,GAxBQ,EAwBN,CAACP,IAAD,CAxBM,CAAT;AA0BA,SAAO,CAACC,MAAD,EAASE,KAAT,CAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useRandom(type) {\n  const [random, setRandom] = useState();\n  const [error, setError] = useState();\n  const mealURL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const drinkURL = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n\n  useEffect(() => {\n    const getRandom = async () => {\n      if (type === 'meal') {\n        try {\n          const result = await fetch(mealURL).then((response) => response.json());\n          setRandom(result.meals[0]);\n        } catch (err) {\n          setError({\n            error: err,\n          });\n        }\n      }\n      if (type === 'drink') {\n        try {\n          const result = await fetch(drinkURL).then((response) => response.json());\n          setRandom(result.drinks[0]);\n        } catch (err) {\n          setError({\n            error: err,\n          });\n        }\n      }\n    };\n    getRandom();\n  }, [type]);\n\n  return [random, error];\n}\n"]},"metadata":{},"sourceType":"module"}