{"ast":null,"code":"import { GET_API_COCKTAIL, GET_API_COCKTAIL_SUCESS, GET_API_COCKTAIL_ERROR, GET_API_MEAL, GET_API_MEAL_SUCESS, GET_API_MEAL_ERROR, SWITCH_SEARCH } from '../actions';\nimport { LOADING } from '../actions/loading';\nconst INITIAL_STATE = {\n  cocktails: [],\n  meals: [],\n  search: '',\n  searchType: 'Nome',\n  error: null,\n  loading: true\n};\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  const {\n    payload,\n    type\n  } = action;\n\n  switch (type) {\n    case GET_API_COCKTAIL:\n      return { ...state,\n        loading: true\n      };\n\n    case LOADING:\n      return { ...state,\n        loading: action.payload\n      };\n\n    case GET_API_MEAL:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_API_COCKTAIL_SUCESS:\n      return { ...state,\n        error: null,\n        cocktails: payload,\n        loading: false\n      };\n\n    case GET_API_MEAL_SUCESS:\n      return { ...state,\n        error: null,\n        meals: payload,\n        loading: false\n      };\n\n    case GET_API_COCKTAIL_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case GET_API_MEAL_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case SWITCH_SEARCH:\n      return { ...state,\n        search: action.payload.search,\n        searchType: action.payload.searchType\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default recipes;","map":{"version":3,"sources":["/home/camila/Documentos/github_projetos/recipes-app-project/src/redux/reducers/reducerAPI.js"],"names":["GET_API_COCKTAIL","GET_API_COCKTAIL_SUCESS","GET_API_COCKTAIL_ERROR","GET_API_MEAL","GET_API_MEAL_SUCESS","GET_API_MEAL_ERROR","SWITCH_SEARCH","LOADING","INITIAL_STATE","cocktails","meals","search","searchType","error","loading","recipes","state","action","payload","type"],"mappings":"AAAA,SACEA,gBADF,EAEEC,uBAFF,EAGEC,sBAHF,EAIEC,YAJF,EAKEC,mBALF,EAMEC,kBANF,EAOEC,aAPF,QAQO,YARP;AASA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,MAAM,EAAE,EAHY;AAIpBC,EAAAA,UAAU,EAAE,MAJQ;AAKpBC,EAAAA,KAAK,EAAE,IALa;AAMpBC,EAAAA,OAAO,EAAE;AANW,CAAtB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AACjD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;;AAEA,UAAQE,IAAR;AACA,SAAKnB,gBAAL;AACE,aAAO,EAAE,GAAGgB,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AAEF,SAAKP,OAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYF,QAAAA,OAAO,EAAEG,MAAM,CAACC;AAA5B,OAAP;;AAEF,SAAKf,YAAL;AACE,aAAO,EAAE,GAAGa,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AAEF,SAAKb,uBAAL;AACE,aAAO,EAAE,GAAGe,KAAL;AAAYH,QAAAA,KAAK,EAAE,IAAnB;AAAyBJ,QAAAA,SAAS,EAAES,OAApC;AAA6CJ,QAAAA,OAAO,EAAE;AAAtD,OAAP;;AAEF,SAAKV,mBAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYH,QAAAA,KAAK,EAAE,IAAnB;AAAyBH,QAAAA,KAAK,EAAEQ,OAAhC;AAAyCJ,QAAAA,OAAO,EAAE;AAAlD,OAAP;;AAEF,SAAKZ,sBAAL;AACE,aAAO,EAAE,GAAGc,KAAL;AAAYH,QAAAA,KAAK,EAAEK,OAAnB;AAA4BJ,QAAAA,OAAO,EAAE;AAArC,OAAP;;AAEF,SAAKT,kBAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYH,QAAAA,KAAK,EAAEK,OAAnB;AAA4BJ,QAAAA,OAAO,EAAE;AAArC,OAAP;;AAEF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,MAAM,EAAEM,MAAM,CAACC,OAAP,CAAeP,MAFlB;AAGLC,QAAAA,UAAU,EAAEK,MAAM,CAACC,OAAP,CAAeN;AAHtB,OAAP;;AAMF;AACE,aAAOI,KAAP;AA9BF;AAgCD,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import {\n  GET_API_COCKTAIL,\n  GET_API_COCKTAIL_SUCESS,\n  GET_API_COCKTAIL_ERROR,\n  GET_API_MEAL,\n  GET_API_MEAL_SUCESS,\n  GET_API_MEAL_ERROR,\n  SWITCH_SEARCH,\n} from '../actions';\nimport { LOADING } from '../actions/loading';\n\nconst INITIAL_STATE = {\n  cocktails: [],\n  meals: [],\n  search: '',\n  searchType: 'Nome',\n  error: null,\n  loading: true,\n};\n\nconst recipes = (state = INITIAL_STATE, action) => {\n  const { payload, type } = action;\n\n  switch (type) {\n  case GET_API_COCKTAIL:\n    return { ...state, loading: true };\n\n  case LOADING:\n    return { ...state, loading: action.payload };\n\n  case GET_API_MEAL:\n    return { ...state, loading: true };\n\n  case GET_API_COCKTAIL_SUCESS:\n    return { ...state, error: null, cocktails: payload, loading: false };\n\n  case GET_API_MEAL_SUCESS:\n    return { ...state, error: null, meals: payload, loading: false };\n\n  case GET_API_COCKTAIL_ERROR:\n    return { ...state, error: payload, loading: false };\n\n  case GET_API_MEAL_ERROR:\n    return { ...state, error: payload, loading: false };\n\n  case SWITCH_SEARCH:\n    return {\n      ...state,\n      search: action.payload.search,\n      searchType: action.payload.searchType,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default recipes;\n"]},"metadata":{},"sourceType":"module"}