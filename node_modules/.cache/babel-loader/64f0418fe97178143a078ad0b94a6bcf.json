{"ast":null,"code":"var _jsxFileName = \"/home/camila/Documentos/github_projetos/recipes-app-project/src/pages/FoodDetails.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ShareBtn from '../components/ShareBtn';\nimport useRedirect from '../hooks/useRedirect';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport functionSetFavorite from '../utils/functionSetFavoriteFood';\nimport functionRenderRecipe from '../utils/functionRenderRecipe';\nimport HeaderWithoutSearch from '../components/HeaderWithoutSearch';\nimport Loading from '../components/Loading';\nimport { setLoading } from '../redux/actions/loading';\nimport '../styles/styles_css/Details.css';\n\nfunction FoodDetails(props) {\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const [recipeRender, setRecipeRender] = useState([]);\n  const {\n    shouldRedirect,\n    redirect\n  } = useRedirect();\n  const [drinksRecomendation, setdrinksRecomendation] = useState([]);\n  const [heartColor, setHeartColor] = useState(false);\n  const [start, setStart] = useState(true);\n  const dispatch = useDispatch();\n  const {\n    loading\n  } = useSelector(state => state.reducerAPI);\n  useEffect(() => {\n    dispatch(setLoading(true));\n\n    const fetchAPI = async () => {\n      const END_POINT = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(END_POINT);\n      const {\n        meals\n      } = await response.json();\n      setRecipeRender(meals);\n    };\n\n    fetchAPI();\n    dispatch(setLoading(false));\n  }, [id, dispatch]);\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\n    if (favoriteRecipes.some(item => item.id === id)) {\n      setHeartColor(true);\n    }\n\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && inProgressRecipes.meals[id]) {\n      setStart(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    dispatch(setLoading(true));\n\n    const fetchAPIDrinks = async () => {\n      const SIX = 6;\n      const urlDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      const results = await fetch(urlDrinks).then(response => response.json());\n      const firstSix = await results.drinks.slice(0, SIX);\n      setdrinksRecomendation(firstSix);\n    };\n\n    fetchAPIDrinks();\n    dispatch(setLoading(false));\n  }, [dispatch]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (redirect.should) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: redirect.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderWithoutSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Detalhes\"), !recipeRender ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 24\n    }\n  }) : recipeRender.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: v4(),\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"meal\",\n    key: v4(),\n    src: item.strMealThumb,\n    \"data-testid\": \"recipe-photo\",\n    className: \"meal-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, item.strMeal), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details-btn-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ShareBtn, {\n    id: id,\n    type: \"comida\",\n    className: \"btn-share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    type: \"button\",\n    className: \"favorite-btn\",\n    onClick: () => functionSetFavorite(recipeRender, id, setHeartColor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"fav-btn\",\n    src: heartColor ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favoritar\",\n    \"data-testid\": \"favorite-btn\",\n    className: \"favorite-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"Categoria: \"), item.strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, functionRenderRecipe(recipeRender)[0].map((ingredient, position) => /*#__PURE__*/React.createElement(\"li\", {\n    \"data-testid\": `${position}-ingredient-name-and-measure`,\n    key: v4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, ingredient, functionRenderRecipe(recipeRender)[1][position])))))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), item.strInstructions), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: item.strYoutube.replace('watch?v=', 'embed/'),\n    title: \"title\",\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Combina\\xE7\\xF5es de Drinks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, drinksRecomendation.map((recomendation, position) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${position}-recomendation-card`,\n    key: v4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    \"data-testid\": `${position}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"drink-recomendation\",\n    key: v4(),\n    src: recomendation.strDrinkThumb,\n    className: \"recomendation-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }), recomendation.strDrink))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"start\",\n    variant: \"success\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: () => shouldRedirect(`/comidas/${item.idMeal}/in-progress`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, start ? 'Start' : 'Continuar Receita'))));\n}\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default FoodDetails;","map":{"version":3,"sources":["/home/camila/Documentos/github_projetos/recipes-app-project/src/pages/FoodDetails.jsx"],"names":["React","useEffect","useState","v4","PropTypes","Button","Redirect","useDispatch","useSelector","ShareBtn","useRedirect","functionSetFavorite","functionRenderRecipe","HeaderWithoutSearch","Loading","setLoading","FoodDetails","props","match","params","id","recipeRender","setRecipeRender","shouldRedirect","redirect","drinksRecomendation","setdrinksRecomendation","heartColor","setHeartColor","start","setStart","dispatch","loading","state","reducerAPI","fetchAPI","END_POINT","response","fetch","meals","json","favoriteRecipes","JSON","parse","localStorage","getItem","some","item","inProgressRecipes","fetchAPIDrinks","SIX","urlDrinks","results","then","firstSix","drinks","slice","should","path","map","strMealThumb","strMeal","blackHeartIcon","whiteHeartIcon","strCategory","ingredient","position","strInstructions","strYoutube","replace","recomendation","strDrinkThumb","strDrink","idMeal","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ShareBtn from '../components/ShareBtn';\nimport useRedirect from '../hooks/useRedirect';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport functionSetFavorite from '../utils/functionSetFavoriteFood';\nimport functionRenderRecipe from '../utils/functionRenderRecipe';\nimport HeaderWithoutSearch from '../components/HeaderWithoutSearch';\nimport Loading from '../components/Loading';\nimport { setLoading } from '../redux/actions/loading';\nimport '../styles/styles_css/Details.css';\n\nfunction FoodDetails(props) {\n  const { match: { params: { id } } } = props;\n  const [recipeRender, setRecipeRender] = useState([]);\n  const { shouldRedirect, redirect } = useRedirect();\n  const [drinksRecomendation, setdrinksRecomendation] = useState([]);\n  const [heartColor, setHeartColor] = useState(false);\n  const [start, setStart] = useState(true);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.reducerAPI);\n\n  useEffect(() => {\n    dispatch(setLoading(true));\n    const fetchAPI = async () => {\n      const END_POINT = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const response = await fetch(END_POINT);\n      const { meals } = await response.json();\n      setRecipeRender(meals);\n    };\n    fetchAPI();\n    dispatch(setLoading(false));\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\n    if (favoriteRecipes.some((item) => item.id === id)) {\n      setHeartColor(true);\n    }\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressRecipes && inProgressRecipes.meals[id]) {\n      setStart(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    dispatch(setLoading(true));\n    const fetchAPIDrinks = async () => {\n      const SIX = 6;\n      const urlDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      const results = await fetch(urlDrinks).then((response) => response.json());\n      const firstSix = await results.drinks.slice(0, SIX);\n      setdrinksRecomendation(firstSix);\n    };\n    fetchAPIDrinks();\n    dispatch(setLoading(false));\n  }, [dispatch]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (redirect.should) {\n    return <Redirect to={ redirect.path } />;\n  }\n\n  return (\n    <div className=\"main-div\">\n      <HeaderWithoutSearch>Detalhes</HeaderWithoutSearch>\n      {!recipeRender ? <Loading />\n        : recipeRender.map((item) => (\n          <div key={ v4() } className=\"details\">\n            <div className='img-ingredients'>\n              <div className=\"img-details\">\n                <img\n                  alt=\"meal\"\n                  key={ v4() }\n                  src={ item.strMealThumb }\n                  data-testid=\"recipe-photo\"\n                  className=\"meal-img\"\n                />\n              </div>\n              <div className='recipe-detail'>\n                <div className=\"detail-card\">\n                  <h3 data-testid=\"recipe-title\">{item.strMeal}</h3>\n                  <div className=\"details-btn-div\">\n                    <ShareBtn id={ id } type=\"comida\" className=\"btn-share\" />\n                    <Button\n                      variant=\"danger\"\n                      type=\"button\"\n                      className=\"favorite-btn\"\n                      onClick={ () => functionSetFavorite(recipeRender, id, setHeartColor) }\n                    >\n                      <img\n                        id=\"fav-btn\"\n                        src={ heartColor ? blackHeartIcon : whiteHeartIcon }\n                        alt=\"favoritar\"\n                        data-testid=\"favorite-btn\"\n                        className=\"favorite-img\"\n                      />\n                    </Button>\n                  </div>\n                </div>\n                <p data-testid=\"recipe-category\">\n                  <span>Categoria: </span>\n                  {item.strCategory}\n                </p>\n                <div className=\"list-ingredients\">\n                  <h4>Ingredientes</h4>\n                  <ul>\n                    {functionRenderRecipe(recipeRender)[0].map((ingredient, position) => (\n                      <li\n                        data-testid={ `${position}-ingredient-name-and-measure` }\n                        key={ v4() }\n                      >\n                        {ingredient}\n                        {functionRenderRecipe(recipeRender)[1][position]}\n                      </li>))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <p\n              className=\"instructions\"\n              data-testid=\"instructions\"\n            >\n              <strong>\n                Instruções\n              </strong>\n              <br />\n              {item.strInstructions}\n            </p>\n\n            <iframe\n              src={ item.strYoutube.replace('watch?v=', 'embed/') }\n              title=\"title\"\n              data-testid=\"video\"\n            />\n\n            <strong>Combinações de Drinks</strong>\n            <div className=\"items-wrapper\">\n              <div className=\"items\">\n                {drinksRecomendation.map((recomendation, position) => (\n                  <div\n                    data-testid={ `${position}-recomendation-card` }\n                    key={ v4() }\n                  >\n                    <div\n                      className=\"item\"\n                      data-testid={ `${position}-recomendation-title` }\n                    >\n                      <img\n                        alt=\"drink-recomendation\"\n                        key={ v4() }\n                        src={ recomendation.strDrinkThumb }\n                        className=\"recomendation-img\"\n                      />\n                      {recomendation.strDrink}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <Button\n              className=\"start\"\n              variant=\"success\"\n              type=\"button\"\n              data-testid=\"start-recipe-btn\"\n              onClick={ () => shouldRedirect(`/comidas/${item.idMeal}/in-progress`) }\n            >\n              { start ? 'Start' : 'Continuar Receita' }\n            </Button>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default FoodDetails;\n"]},"metadata":{},"sourceType":"module"}