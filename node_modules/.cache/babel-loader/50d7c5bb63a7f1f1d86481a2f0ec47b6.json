{"ast":null,"code":"var _jsxFileName = \"/home/camila/Documentos/github_projetos/recipes-app-project/src/components/SearchBar/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport ButtonSearch from './ButtonSearch';\nimport InputSearch from './InputSearch';\nimport RadiosButtonSearch from './RadiosButtonSearch';\nimport { getCocktail, getMeal } from '../../redux/actions';\nconst INITIAL_STATE = {\n  search: '',\n  typeSearch: 'Nome'\n};\n\nfunction SearchBar() {\n  const [stateSearchBar, setStateSearchBar] = useState(INITIAL_STATE);\n  const {\n    pathname\n  } = useLocation();\n  const dispatch = useDispatch();\n  const {\n    search,\n    typeSearch\n  } = stateSearchBar;\n  useEffect(() => {\n    if (typeSearch === 'Primeira letra' && search.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }, [search.length, typeSearch]);\n\n  const handleChange = ({\n    target: {\n      name,\n      type,\n      value,\n      checked\n    }\n  }) => {\n    function newValue() {\n      switch (type) {\n        case 'checkbox':\n          return checked;\n\n        case 'number':\n          return +value;\n\n        default:\n          return value;\n      }\n    }\n\n    setStateSearchBar({ ...stateSearchBar,\n      [name]: newValue()\n    });\n  };\n\n  const handleClick = () => {\n    if (pathname.includes('bebidas')) {\n      dispatch(getCocktail(search, typeSearch));\n    } else {\n      dispatch(getMeal(search, typeSearch));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputSearch, {\n    handleChange: handleChange,\n    value: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadiosButtonSearch, {\n    handleChange: handleChange,\n    value: typeSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ButtonSearch, {\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/camila/Documentos/github_projetos/recipes-app-project/src/components/SearchBar/index.js"],"names":["React","useState","useEffect","useDispatch","useLocation","ButtonSearch","InputSearch","RadiosButtonSearch","getCocktail","getMeal","INITIAL_STATE","search","typeSearch","SearchBar","stateSearchBar","setStateSearchBar","pathname","dispatch","length","global","alert","handleChange","target","name","type","value","checked","newValue","handleClick","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,qBAArC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,EADY;AAEpBC,EAAAA,UAAU,EAAE;AAFQ,CAAtB;;AAKA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAACS,aAAD,CAApD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeZ,WAAW,EAAhC;AACA,QAAMa,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAyBE,cAA/B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,UAAU,KAAK,gBAAf,IAAmCD,MAAM,CAACO,MAAP,GAAgB,CAAvD,EAA0D;AACxDC,MAAAA,MAAM,CAACC,KAAP,CAAa,+CAAb;AACD;AACF,GAJQ,EAIN,CAACT,MAAM,CAACO,MAAR,EAAgBN,UAAhB,CAJM,CAAT;;AAMA,QAAMS,YAAY,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB;AAAV,GAAD,KAAgD;AACnE,aAASC,QAAT,GAAoB;AAClB,cAAQH,IAAR;AACA,aAAK,UAAL;AAAiB,iBAAOE,OAAP;;AACjB,aAAK,QAAL;AAAe,iBAAO,CAACD,KAAR;;AACf;AAAS,iBAAOA,KAAP;AAHT;AAKD;;AACDV,IAAAA,iBAAiB,CAAC,EAAE,GAAGD,cAAL;AAAqB,OAACS,IAAD,GAAQI,QAAQ;AAArC,KAAD,CAAjB;AACD,GATD;;AAWA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIZ,QAAQ,CAACa,QAAT,CAAkB,SAAlB,CAAJ,EAAkC;AAChCZ,MAAAA,QAAQ,CAACT,WAAW,CAACG,MAAD,EAASC,UAAT,CAAZ,CAAR;AACD,KAFD,MAEO;AACLK,MAAAA,QAAQ,CAACR,OAAO,CAACE,MAAD,EAASC,UAAT,CAAR,CAAR;AACD;AACF,GAND;;AAQA,sBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,YAAY,EAAGS,YADjB;AAEE,IAAA,KAAK,EAAGV,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,YAAY,EAAGU,YADjB;AAEE,IAAA,KAAK,EAAGT,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAWE,oBAAC,YAAD;AACE,IAAA,WAAW,EAAGgB,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAkBD;;AAED,eAAef,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport ButtonSearch from './ButtonSearch';\nimport InputSearch from './InputSearch';\nimport RadiosButtonSearch from './RadiosButtonSearch';\nimport { getCocktail, getMeal } from '../../redux/actions';\n\nconst INITIAL_STATE = {\n  search: '',\n  typeSearch: 'Nome',\n};\n\nfunction SearchBar() {\n  const [stateSearchBar, setStateSearchBar] = useState(INITIAL_STATE);\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n  const { search, typeSearch } = stateSearchBar;\n\n  useEffect(() => {\n    if (typeSearch === 'Primeira letra' && search.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }, [search.length, typeSearch]);\n\n  const handleChange = ({ target: { name, type, value, checked } }) => {\n    function newValue() {\n      switch (type) {\n      case 'checkbox': return checked;\n      case 'number': return +value;\n      default: return value;\n      }\n    }\n    setStateSearchBar({ ...stateSearchBar, [name]: newValue() });\n  };\n\n  const handleClick = () => {\n    if (pathname.includes('bebidas')) {\n      dispatch(getCocktail(search, typeSearch));\n    } else {\n      dispatch(getMeal(search, typeSearch));\n    }\n  };\n\n  return (\n    <form className=\"search-form\">\n      <InputSearch\n        handleChange={ handleChange }\n        value={ search }\n      />\n      <div className=\"radios\">\n        <RadiosButtonSearch\n          handleChange={ handleChange }\n          value={ typeSearch }\n        />\n      </div>\n      <ButtonSearch\n        handleClick={ handleClick }\n\n      />\n    </form>\n  );\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}