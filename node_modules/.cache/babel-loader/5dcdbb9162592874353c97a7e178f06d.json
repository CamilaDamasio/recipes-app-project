{"ast":null,"code":"const functionRenderRecipe = recipeRender => {\n  if (recipeRender !== undefined) {\n    const ingredients = recipeRender.map(value => Object.entries(value).filter(ingredient => ingredient[0].includes('strIngredient') && ingredient[1] && ingredient[1].length && ingredient[1] !== null).map(item => item[1]));\n    const measures = recipeRender.map(value => Object.entries(value).filter(ingredient => ingredient[0].includes('strMeasure') && ingredient[1] && ingredient[1] !== ' ' && ingredient[1] !== null).map(item => item[1]));\n    const ingredientsAndMeasures = ingredients.map((name, index) => ({\n      nome: name,\n      quantidade: measures[index]\n    }));\n    const ingredientsAndMeasuresList = ingredientsAndMeasures && ingredientsAndMeasures.length && Object.values(ingredientsAndMeasures[0]);\n    return ingredientsAndMeasuresList;\n  }\n};\n\nexport default functionRenderRecipe;","map":{"version":3,"sources":["/home/camila/Documentos/github_projetos/recipes-app-project/src/utils/functionRenderRecipe.js"],"names":["functionRenderRecipe","recipeRender","undefined","ingredients","map","value","Object","entries","filter","ingredient","includes","length","item","measures","ingredientsAndMeasures","name","index","nome","quantidade","ingredientsAndMeasuresList","values"],"mappings":"AAAA,MAAMA,oBAAoB,GAAIC,YAAD,IAAkB;AAC7C,MAAIA,YAAY,KAAKC,SAArB,EAAgC;AAC9B,UAAMC,WAAW,GAAGF,YAAY,CAACG,GAAb,CAAkBC,KAAD,IAAWC,MAAM,CAACC,OAAP,CAAeF,KAAf,EAC7CG,MAD6C,CACrCC,UAAD,IAAgBA,UAAU,CAAC,CAAD,CAAV,CACrBC,QADqB,CACZ,eADY,KACQD,UAAU,CAAC,CAAD,CADlB,IACyBA,UAAU,CAAC,CAAD,CAAV,CAAcE,MADvC,IAEvBF,UAAU,CAAC,CAAD,CAAV,KAAkB,IAH2B,EAGrBL,GAHqB,CAGhBQ,IAAD,IAAUA,IAAI,CAAC,CAAD,CAHG,CAA5B,CAApB;AAKA,UAAMC,QAAQ,GAAGZ,YAAY,CAACG,GAAb,CAAkBC,KAAD,IAAWC,MAAM,CAACC,OAAP,CAAeF,KAAf,EAC1CG,MAD0C,CAClCC,UAAD,IAAgBA,UAAU,CAAC,CAAD,CAAV,CACrBC,QADqB,CACZ,YADY,KACKD,UAAU,CAAC,CAAD,CADf,IACsBA,UAAU,CAAC,CAAD,CAAV,KAAkB,GADxC,IAEvBA,UAAU,CAAC,CAAD,CAAV,KAAkB,IAHwB,EAGlBL,GAHkB,CAGbQ,IAAD,IAAUA,IAAI,CAAC,CAAD,CAHA,CAA5B,CAAjB;AAKA,UAAME,sBAAsB,GAAGX,WAAW,CACvCC,GAD4B,CACxB,CAACW,IAAD,EAAOC,KAAP,MAAkB;AAAEC,MAAAA,IAAI,EAAEF,IAAR;AAAcG,MAAAA,UAAU,EAAEL,QAAQ,CAACG,KAAD;AAAlC,KAAlB,CADwB,CAA/B;AAGA,UAAMG,0BAA0B,GAAIL,sBAAsB,IAAIA,sBAAsB,CACjFH,MADiC,IACvBL,MAAM,CAACc,MAAP,CAAcN,sBAAsB,CAAC,CAAD,CAApC,CADb;AAGA,WAAOK,0BAAP;AACD;AACF,CApBD;;AAsBA,eAAenB,oBAAf","sourcesContent":["const functionRenderRecipe = (recipeRender) => {\n  if (recipeRender !== undefined) {\n    const ingredients = recipeRender.map((value) => Object.entries(value)\n      .filter((ingredient) => ingredient[0]\n        .includes('strIngredient') && ingredient[1] && ingredient[1].length\n    && ingredient[1] !== null).map((item) => item[1]));\n\n    const measures = recipeRender.map((value) => Object.entries(value)\n      .filter((ingredient) => ingredient[0]\n        .includes('strMeasure') && ingredient[1] && ingredient[1] !== ' '\n    && ingredient[1] !== null).map((item) => item[1]));\n\n    const ingredientsAndMeasures = ingredients\n      .map((name, index) => ({ nome: name, quantidade: measures[index] }));\n\n    const ingredientsAndMeasuresList = (ingredientsAndMeasures && ingredientsAndMeasures\n      .length && Object.values(ingredientsAndMeasures[0]));\n\n    return ingredientsAndMeasuresList;\n  }\n};\n\nexport default functionRenderRecipe;\n"]},"metadata":{},"sourceType":"module"}